/*
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
*/

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int end = 0;
        int a[]={-1,-1};
        boolean b=false; 
        int count=0;
        for(int j = 0,i = 0 ; j < nums.length; j++){
            if(nums[j] == target)
            {   end = j; 
                count++;
            }
            if(count==1){
               a[0]=end; 
            }
        }
        if(count>1){
            a[1]=end;
            return a;
        }
        if(count==1){
            int res[]={end,end};
            return res;
        }
        return a;
    }
}